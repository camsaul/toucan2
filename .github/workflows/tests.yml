name: Tests

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  kondo:
    runs-on: ubuntu-20.04
    timeout-minutes: 10
    steps:
    - uses: actions/checkout@v4.1.7
    - name: Setup Java & Clojure
      uses: ./.github/actions/setup
      with:
        cache-key: kondo
    - name: Copy Kondo config from deps
      run: >-
        clojure -M:kondo
        --copy-configs
        --dependencies
        --lint "$(clojure -A:dev -Spath)"
        --skip-lint
        --parallel
    - name: Run clj-kondo
      run: >-
        clojure -M:kondo:kondo/all

  tests-postgres:
    runs-on: ubuntu-20.04
    timeout-minutes: 10
    steps:
    - uses: actions/checkout@v4.1.7
    - uses: harmon758/postgresql-action@v1
      with:
        postgresql version: 14
        postgresql db: 'toucan2'
        postgresql user: 'cam'
        postgresql password: 'cam'
    - name: Setup Java & Clojure
      uses: ./.github/actions/setup
      with:
        cache-key: tests-postgres
    - run: clojure -X:dev:test:test-postgres
      name: Run tests
      env:
        CI: TRUE

  tests-mariadb:
    runs-on: ubuntu-20.04
    timeout-minutes: 10
    services:
      mariadb:
        image: mariadb:latest
        ports:
          - "3306:3306"
        env:
          MYSQL_DATABASE: metabase_test
          MYSQL_USER: root
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
    steps:
    - uses: actions/checkout@v4.1.7
    - name: Setup Java & Clojure
      uses: ./.github/actions/setup
      with:
        cache-key: tests-mariadb
    - run: clojure -X:dev:test:test-mariadb
      name: Run tests
      env:
        CI: TRUE

  tests-h2:
    runs-on: ubuntu-20.04
    timeout-minutes: 10
    steps:
    - uses: actions/checkout@v4.1.7
    - name: Setup Java & Clojure
      uses: ./.github/actions/setup
      with:
        cache-key: tests-h2
    - run: clojure -X:dev:test:test-h2
      name: Run tests
      env:
        CI: TRUE

  whitespace-linter:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v4.1.7
    - name: Setup Java & Clojure
      uses: ./.github/actions/setup
      with:
        cache-key: whitespace-linter
    - run: clojure -T:whitespace-linter
      name: Run whitespace linter

  check:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v4.1.7
    - name: Setup Java & Clojure
      uses: ./.github/actions/setup
      with:
        cache-key: check
    - run: clojure -M:check
      name: Check Toucan 2 core namespaces
    - run: clojure -M:check
      name: Check toucan2-toucan1 namespaces
      working-directory: toucan1

  codecov:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v4.1.7
    - name: Setup Java & Clojure
      uses: ./.github/actions/setup
      with:
        cache-key: codecov
    - run: clojure -X:dev:test-h2:cloverage
      name: Run tests with Cloverage
    - name: Upload results to codecov.io
      uses: codecov/codecov-action@v4.5.0
      with:
        files: ./target/coverage/codecov.json
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  codespell:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v4.1.7
      - uses: codespell-project/actions-codespell@v2
        with:
          ignore_words_file: .codespellignore
