{:paths
 ["src" "resources"]

 :deps
 {better-cond/better-cond             {:mvn/version "2.1.5"}
  camel-snake-kebab/camel-snake-kebab {:mvn/version "0.4.3"}
  com.github.seancorfield/honeysql    {:mvn/version "2.4.1066"} ; don't upgrade yet because of https://github.com/seancorfield/honeysql/issues/537
  com.github.seancorfield/next.jdbc   {:mvn/version "1.3.939"}
  environ/environ                     {:mvn/version "1.2.0"}
  methodical/methodical               {:mvn/version "1.0.123"}
  mvxcvi/puget                        {:mvn/version "1.3.4"}
  org.clojure/tools.logging           {:mvn/version "1.3.0"}
  org.clojure/tools.trace             {:mvn/version "0.8.0"}
  potemkin/potemkin                   {:mvn/version "0.4.7"}
  pretty/pretty                       {:mvn/version "1.0.5"}}

 :aliases
 {:dev
  {:extra-deps
   {com.h2database/h2                    {:mvn/version "2.3.232"}
    eftest/eftest                        {:mvn/version "0.6.0"}
    io.github.camsaul/humane-are         {:mvn/version "1.0.2"}
    org.clojure/java.classpath           {:mvn/version "1.1.0"}
    org.clojure/math.combinatorics       {:mvn/version "0.3.0"}
    org.clojure/tools.namespace          {:mvn/version "1.5.0"}
    ;; Don't upgrade to 3.x yet. It only returns the first generated key when inserting multiple rows. So keep using v2
    ;; until we decide how to work around it or they fix it. See
    ;;
    ;; https://mariadb.com/kb/en/about-mariadb-connector-j/#generated-keys-limitation
    org.mariadb.jdbc/mariadb-java-client {:mvn/version "2.7.8"}
    org.postgresql/postgresql            {:mvn/version "42.7.4"}
    pjstadig/humane-test-output          {:mvn/version "0.11.0"}}

   :extra-paths
   ["test" "toucan1/src" "toucan1/test"]

   :jvm-opts
   ["-Duser.timezone=UTC"
    ;; if compilation on launch fails or whatever print to console instead of a temp file.
    "-Dclojure.main.report=stderr"
    ;; [LEVEL logger-name] message stacktrace
    "-Djava.util.logging.SimpleFormatter.format=%n[%4$s %3$s] %5$s%n%6$s%n"
    ;; Exceptions that get thrown repeatedly are created without stacktraces as a performance optimization in newer Java
    ;; versions. This makes debugging pretty hard when working on stuff locally -- prefer debuggability over performance
    ;; for local dev work.
    "-XX:-OmitStackTraceInFastThrow"]}

  ;; clojure -M:check
  :check
  {:extra-deps {athos/clj-check {:git/url "https://github.com/athos/clj-check.git"
                                 :sha     "d997df866b2a04b7ce7b17533093ee0a2e2cb729"}}
   :main-opts  ["-m" "clj-check.check"]}

  ;; clj -T:whitespace-linter
  :whitespace-linter
  {:deps       {com.github.camsaul/whitespace-linter {:sha "e35bc252ccf5cc74f7d543ef95ad8a3e5131f25b"}}
   :ns-default whitespace-linter
   :exec-fn    whitespace-linter/lint
   :exec-args  {:paths            ["deps.edn" "src" "test" "toucan1/src" "toucan1/test" ".github" "docs"]
                :include-patterns ["\\.clj[cs]?$" "\\.edn$" "\\.yaml$" "\\.sql$" "\\.md$"]}}

  ;; Run tests against the value of `TEST_DBS`, by default `postgres,h2,mariadb`.
  ;;
  ;; clojure -X:dev:test
  :test
  {:exec-fn   toucan2.test-runner/run-tests
   :jvm-opts  ["-Dtest.dbs=h2,postgres,mariadb"
               "-Dtoucan.test=true"
               "-Dtoucan.debug.level=disabled" #_trace]
   :exec-args {:only ["test"
                      "toucan1/test"]}}

  ;; run tests only against H2.
  ;;
  ;; clj -X:dev:test:test-h2
  :test-h2
  {:jvm-opts ["-Dtest.dbs=h2"]}

  ;; only run tests against the Toucan 2 'core'
  ;;
  ;; clj -X:dev:test:test-core
  :test-core
  {:exec-args {:only ["test"]}}

  ;; only run tests against `toucan2-toucan1`
  ;;
  ;; clj -X:dev:test:test-toucan1
  :test-toucan1
  {:exec-args {:only ["toucan1/test"]}}

  ;; run tests only against Postgres.
  ;;
  ;; clj -X:dev:test:test-postgres
  :test-postgres
  {:jvm-opts ["-Dtest.dbs=postgres"]}

  ;; run tests only against MariaDB.
  ;;
  ;; clj -X:dev:test:test-mariadb
  :test-mariadb
  {:jvm-opts ["-Dtest.dbs=mariadb"]}

  ;; clj -X:dev:cloverage
  :cloverage
  {:extra-deps {cloverage/cloverage {:mvn/version "1.2.4"}}
   :exec-fn    toucan2.cloverage-runner/run-project
   :exec-args  {:codecov? true

                :src-ns-path
                ["src" "toucan1/src"]

                :test-ns-path
                ["test" "toucan1/test"]

                ;; exclude debug logging.
                :exclude-call
                [toucan2.log/debugf
                 toucan2.log/errorf
                 toucan2.log/infof
                 toucan2.log/tracef
                 toucan2.log/warnf]

                :ns-regex
                ["^toucan\\..*" "^toucan2\\..*"]

                ;; ignore namespaces we don't test with Cloverage.
                :ns-exclude-regex
                ["^toucan2\\.jdbc\\.mysql-mariadb.*"
                 "^toucan2\\.jdbc\\.postgres.*"]}}

  ;; clojure -T:build
  :build
  {:deps       {io.github.clojure/tools.build {:git/tag "v0.10.5" :git/sha "2a21b7a"}
                slipset/deps-deploy           {:mvn/version "0.2.2"}}
   :ns-default build}}}
